{"pages":[{"title":"","text":"","link":"/404.html"},{"title":"About","text":"光有好奇心而不去實踐，等於自願放棄成功機會 別為自己畫地自限，Just Do It！！","link":"/about/index.html"},{"title":"Archives","text":"","link":"/archive/index.html"},{"title":"Tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"","text":"{}","link":"/2018/11/25/some-thoughts-about-paper-convex-fessible-set/"},{"title":"我的博客搭建过程","text":"Hexo简介 Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页，了解更多及如何安装可以参看官方文档。 我的博客模板来自于Beantech,其Hexo项目目录为: 1234567891011121314Hexo-project ## Hexo工程根目录 └── node_modules ## 本工程中所安装的插件所在目录 └── public ## 编译后生成的各种数据文件 └── scaffolds ## 文章样式,包含3种(draft, page, post) └── source └── _posts ## 基本博客文章所在目录 └── about ## about页面的内容 └── archive ## archive页面的内容 └── img ## 项目中所用到的一些图片 └── tags ## tags页面的内容 ├── path_tracking、speed_control、ecucomm... └── themes ## 主题所在目录 └── _config.yml ## 站点配置文件 └── package.json ## 本项目所需要依赖的hexo-plugins 基本所有的Hexo项目目录都是这样, 其中需要注意的是: /source/_post目录就是存放博客文章的目录 _config.yml叫站点配置文件,包含了网站的一些配置信息,详情可见官网 package.json文件里描述了本项目的一些信息以及需要安装的hexo依赖,但这个文件不是必须的.当目录下含有该文件时，可以使用指令npm install自动安装本项目所需要的依赖 themes目录下存放了主题文件，这是最重要的一个目录，因为主题决定了博客的样子．该目录下可以存放多个主题，在_config.yml中指定选用哪一个主题．官方提供了许多主题. 搭建过程 我的博客模板来自YunYuHsuan.参看其readme做一些简单的修改,将其变成自己的博客,在此基础上我又做了一些修改. 解决博客目录不能跳转的问题 该模板在博文右边有一个使用hexo-toc插件实现的目录框,但点击后并不会跳转到指定行,似乎是由于hexo-toc插件更新的问题,解决办法参看原作者的github issue 博文中显示数学公式 在markdown编辑器中安装mathjax插件就能支持对latex公式进行渲染，atom就是这样的解决办法，但在hexo中还需要更改markdown的渲染方式，具体过程如下: 使用Kramed代替 Marked hexo 默认的渲染引擎是 marked，但是 marked 不支持 mathjax。 kramed 是在 marked 的基础上进行修改。我们在工程目录下执行以下命令来安装 kramed 12npm uninstall hexo-renderer-marked --savenpm install hexo-renderer-kramed --save 然后，更改/node_modules/hexo-renderer-kramed/lib/renderer.js中的相应代码块为： 1234// Change inline math rulefunction formatText(text) { return text;} 停止使用hexo-math而使用mathjax 12npm uninstall hexo-math --savenpm install hexo-renderer-mathjax --save 安装mathjax后需要更改cdn 链接，打开/node_modules/hexo-renderer-mathjax/mathjax.html然后，把&lt;script&gt;更改为： 1&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML\"&gt;&lt;/script&gt; 更改默认转义规则 Hexo与MathJax在大部分的时候表现完美，但是Markdwon本身的特殊符号与Latex中的符号会出现冲突的时候： _转义。在markdown中，_是斜体，但是在latex中，却有下标的意思. \\\\换行转义。在markdown中，\\\\会被转义为\\, 会影响影响MathJax对公式中的\\\\进行渲染，导致独立公式块不能够换行. 可以修改nodes_modules/marked/lib/marked.js文件，去除对_和\\\\的转义: 将escape: /^\\\\([\\\\`*{}\\[\\]()# +\\-.!_&gt;])/,替换为escape: /^\\\\([`*{}\\[\\]()# +\\-.!_&gt;])/,, 去除对\\\\的转义 将em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,改为em:/^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,, 去除对_的转义 效果示例： $$\\frac{7x+5}{1+y^2}\\tag{1.1}$$ 加上站内搜索的功能 这个模板没有站内搜索的功能,需要自己手动添加.我们可以从其他具有搜索功能的主题中移植相关代码过来,但这就涉及到对theme有一定了解. theme结构浅析 theme的目录结构为: 12345678theme-name ## 主题名 └── layout ## 模板文件夹,包含了各种页面的模板,决定了各个页面的显示效果 ├── layout.ejs, page.ejs, index.ejs ... └── source └── css ## css样式目录 └── fonts ## 字体 └── js ## JavaScript脚本目录 └── _config.yml ## 主题配置文件 layout中存放的是模板文件,可以采用ejs模板,ejs基本是采用bootstrap框架来设计网页页面；css目录中存放了各种.css定义的样式,比如定义了某种框的大小、距网页顶部的距离等，具体可以看css教程.在ejs中包含.css文件就可以使用其中定义的样式了；js目录中存放了许多javascript脚本，是一些功能函数，比如点击了某个按钮后要如何处理，就可以用javascript实现。 需要说明的是，layout中有几个ejs必须存在且名字必须用指定的。layout.ejs是一个特殊的模板，其余所有的ejs模板都会调用layout.ejs，因此一般在layout.ejs中写一些公有的部分，比如标题栏、导航栏、页脚等；index.ejs是网站的主界面，也就是输入网址后显示的第一个界面；其余的archive.ejs、about.ejs等就是相应页面的界面。 为了更好的理解theme，可以看Jonathan Klughertz的教程自己尝试写一个theme 添加search功能 search功能我主要是移植的icura主题。这个主题很棒，代码组织的特别好，清晰易懂便于移植。 使用icarus样式 首先从github下载icura: 1git clone https://github.com/ppoffice/hexo-theme-icarus.git 将其css目录和js目录下的文件全都拷贝到自己主题的css和js目录下，这样就能使用icura定义的css样式和javascript功能函数了。 接着打开&lt;自己的theme目录&gt;/layout/_partial/head.ejs，在合适的位置添加： 1234&lt;%- _css(iconcdn()) %&gt;&lt;%- _css(fontcdn('Ubuntu:400,600|Source+Code+Pro')) %&gt;&lt;%- _css(cdn('highlight.js', '9.12.0', 'styles/' + get_config('article.highlight') + '.css')) %&gt;&lt;%- _css('css/style') %&gt; 以使用icarus定义的样式 使用icura的搜索函数 将hexo-theme-icarus/layout/search/目录拷贝到 &lt;自己的theme目录&gt;/layout/下。然后打开&lt;自己的theme目录&gt;/layout/layout.ejs,将对应的代码修改为： 12345&lt;body ontouchstart=\"\"&gt; &lt;%- partial('_partial/header',{cache: true}) %&gt; &lt;%- partial('_partial/nav',{cache: true}) %&gt; &lt;%- partial('search/insight') %&gt; 再打开&lt;自己的theme目录&gt;/layout/_partial/nav.ejs文件，将首行修改为： 1&lt;nav class=\"navbar navbar-default navbar-custom navbar-fixed-top navbar-main\"&gt; 继续在相应位置添加代码： 12345678910111213141516171819202122232425&lt;div id=\"huxblog_navbar\"&gt; &lt;div class=\"navbar-collapse\"&gt; &lt;ul class=\"nav navbar-nav navbar-right\"&gt; &lt;li&gt; &lt;a href=\"&lt;%= config.root %&gt;\"&gt;Home&lt;/a&gt; &lt;/li&gt; &lt;% site.pages.forEach(function(page){ %&gt; &lt;% if(page.title){ %&gt; &lt;li&gt; &lt;a href=\"&lt;%= config.root %&gt;&lt;%= page.path.replace('index.html', '') %&gt;\"&gt;&lt;%= page.title %&gt;&lt;/a&gt; &lt;/li&gt; &lt;% } %&gt; &lt;% }); %&gt; &lt;/ul&gt; &lt;/div&gt;&lt;/div&gt;&lt;div class=\"navbar-end\"&gt; &lt;a class=\"navbar-item search\" title=\"&lt;%= __('search.search') %&gt;\" href=\"javascript:;\"&gt; &lt;i class=\"fas fa-search\"&gt;&lt;/i&gt; &lt;/a&gt;&lt;/div&gt; 生成content.json 将icarua主题下的include、scripts、package.json拷贝到自己的主题目录下，并打开&lt;自己的theme目录&gt;/scripts/index.js，修改代码为： 12345678910111213141516171819//require('../includes/tasks/welcome');//require('../includes/tasks/check_deps');//require('../includes/tasks/check_config');//require('../includes/generators/categories')(hexo);//require('../includes/generators/category')(hexo);//require('../includes/generators/tags')(hexo);require('../includes/generators/insight')(hexo);//require('../includes/filters/highlight')(hexo);require('../includes/helpers/cdn')(hexo);require('../includes/helpers/config')(hexo);require('../includes/helpers/layout')(hexo);require('../includes/helpers/override')(hexo);require('../includes/helpers/page')(hexo);require('../includes/helpers/site')(hexo);// Debug helperhexo.extend.helper.register('console', function () { console.log(arguments)}); 这样就能使用站内搜索功能了","link":"/2018/11/24/我的博客搭建/"}],"tags":[{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"}],"categories":[]}